"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Address {
  city: String
  name: String
  state: String
  street: String
  zip: String
}

type Cart {
  billingAddress: Address
  cartItems: [CartItem]
  count: Int
  longValue: Float
  pipelineSessionId: String
  promoCodes: [String]
  shippingAddress: Address
  threadName: String
}

type CartItem {
  amount: Float
  doubleAmount: Float
  otherAmount: Float
  otherDoubleAmount: Float
  otherDoubleBigAmount: Float
  product: Product
  quantity: Int
  rating: Int
  someFlag: Boolean
  someOtherFlag: Boolean
}

type CartState {
  state: Cart
}

type Mutation {
  cartDiagnosticAction(action: DiagnosticActionInput): CartState
  cartExceptionAction(action: ExceptionActionInput): CartState
  cartPromoCodeAction(action: PromoCodeActionInput): CartState
  cartRefreshAction(action: RefreshActionInput): CartState
  cartSetAddress(action: SetAddressInput): CartState
}

type Product {
  name: String
  sku: String
}

type Query {
  cart: CartState
}

input AddressInput {
  city: String
  name: String
  state: String
  street: String
  zip: String
}

input DiagnosticActionInput {
  dummy: String
}

input ExceptionActionInput {
  dummy: String
}

input PromoCodeActionInput {
  promoCodes: [String]
}

input RefreshActionInput {
  ignore: String
}

input SetAddressInput {
  address: AddressInput
  addressType: String
}
